{
  "__inputs": [
    {
      "name": "DS_DS_PROMETHEUS",
      "label": "ds_prometheus",
      "description": "",
      "type": "datasource",
      "pluginId": "prometheus",
      "pluginName": "Prometheus"
    },
    {
      "name": "DS_DS_ELASTIC_LOGS",
      "label": "ds_elastic_logs",
      "description": "",
      "type": "datasource",
      "pluginId": "elasticsearch",
      "pluginName": "Elasticsearch"
    },
    {
      "name": "DS_DS_ELASTIC_GC",
      "label": "ds_elastic_gc",
      "description": "",
      "type": "datasource",
      "pluginId": "elasticsearch",
      "pluginName": "Elasticsearch"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "datasource",
      "id": "elasticsearch",
      "name": "Elasticsearch",
      "version": "1.0.0"
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "12.0.3"
    },
    {
      "type": "datasource",
      "id": "prometheus",
      "name": "Prometheus",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_DS_PROMETHEUS}"
        },
        "enable": true,
        "hide": false,
        "iconColor": "red",
        "name": "OOMKilled",
        "tagKeys": "container",
        "target": {
          "expr": "increase(kube_pod_container_status_restarts_total{pod=\"$pod\",container=\"$container\"}[15m])*on (pod, container) group_left(reason) kube_pod_container_status_last_terminated_reason{pod=\"$pod\",container=\"$container\",reason=\"OOMKilled\"} > 0",
          "interval": "",
          "refId": "Anno"
        },
        "titleFormat": "OOMKilled termination"
      },
      {
        "datasource": {
          "type": "elasticsearch",
          "uid": "${DS_DS_ELASTIC_LOGS}"
        },
        "enable": true,
        "hide": false,
        "iconColor": "#C4162A",
        "limit": 100,
        "mappings": {},
        "name": "OOM",
        "showIn": 0,
        "tags": [],
        "tagsField": "application",
        "target": {
          "query": "\"java.lang.OutOfMemoryError:\" AND (\"Java heap space\" OR \"GC Overhead limit exceeded\" OR \"Requested array size exceeds VM limit\" OR \"Metaspace\" OR \"Compressed class space\" OR \"stack_trace_with_native_method\") && application:\"$container\" && host:\"$pod\"",
          "refId": "annotation_query"
        },
        "textField": "message",
        "type": "tags"
      },
      {
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_DS_PROMETHEUS}"
        },
        "enable": false,
        "expr": "changes (kube_pod_container_status_restarts_total{container=~\"$container\",pod=~\"$pod\"}[15m])*on (pod, container) group_left(reason) kube_pod_container_status_last_terminated_reason{container=~\"$container\",pod=~\"$pod\",reason=\"Error\"}",
        "hide": true,
        "iconColor": "#8F3BB8",
        "limit": 100,
        "name": "OOM Restart",
        "showIn": 0,
        "step": "10m",
        "tagKeys": "container",
        "tags": [],
        "titleFormat": "Container restarted due to OOM",
        "type": "tags"
      },
      {
        "datasource": {
          "type": "elasticsearch",
          "uid": "${DS_DS_ELASTIC_GC}"
        },
        "enable": false,
        "hide": false,
        "iconColor": "#1F60C4",
        "limit": 100,
        "mappings": {},
        "name": "Full GC",
        "showIn": 0,
        "tags": [],
        "tagsField": "application",
        "target": {
          "query": "\"Heap after GC invocations=\" && \"(full \" && application:\"$container\" && host:\"$pod\"",
          "refId": "annotation_query"
        },
        "textField": "",
        "timeEndField": "",
        "type": "tags"
      },
      {
        "datasource": {
          "type": "elasticsearch",
          "uid": "${DS_DS_ELASTIC_GC}"
        },
        "enable": true,
        "filter": {
          "exclude": false,
          "ids": [
            40
          ]
        },
        "hide": false,
        "iconColor": "orange",
        "name": "Stall",
        "target": {
          "query": "\"Garbage Collection (Allocation Stall)\" AND NOT \"start\" AND host:\"$pod\"",
          "refId": "annotation_query"
        },
        "textField": "logmessage",
        "timeField": "@logtimestamp"
      }
    ]
  },
  "description": "To troubleshoot heap memory and java internals",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 1,
  "id": null,
  "links": [
    {
      "asDropdown": false,
      "icon": "doc",
      "tags": [],
      "targetBlank": true,
      "title": "JVM internals",
      "tooltip": "",
      "type": "link",
      "url": "https://docs.oracle.com/javase/8/docs/api/java/lang/management/MemoryUsage.html"
    },
    {
      "icon": "doc",
      "tags": [],
      "targetBlank": true,
      "title": "OOM Exception",
      "type": "link",
      "url": "https://docs.oracle.com/javase/8/docs/technotes/guides/troubleshoot/memleaks002.html"
    }
  ],
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 59,
      "panels": [],
      "repeat": "container",
      "title": "$container",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "Uptime since container started",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 1,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "Terminated"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 0,
        "y": 1
      },
      "id": 3,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "(time() - max(container_start_time_seconds{pod=\"$pod\",container=\"$container\"}))",
          "format": "time_series",
          "instant": true,
          "intervalFactor": 2,
          "legendFormat": "",
          "metric": "",
          "refId": "A",
          "step": 14400
        }
      ],
      "title": "Uptime",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "JVM Version",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 2,
        "y": 1
      },
      "id": 4,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "name",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "exemplar": true,
          "expr": "jvm_runtime_info{pod=\"$pod\",container=\"$container\"}",
          "format": "time_series",
          "instant": true,
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "{{version}}",
          "metric": "",
          "refId": "A",
          "step": 14400
        }
      ],
      "title": "Version",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "Type of GC collector (ConcurrentMarkSweep|PS MarkSweep|G1 Old Generation|ZGC|MarkSweepCompact)",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 4,
        "y": 1
      },
      "id": 42,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "name",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "exemplar": true,
          "expr": "topk(1,max by (gc)(jvm_gc_collection_seconds_count{pod=\"$pod\",container=\"$container\",gc=~\"ConcurrentMarkSweep|PS MarkSweep|G1 Old Generation|ZGC|ZGC Cycles|old|end of major GC|end of major GC|MarkSweepCompact|G1 Concurrent GC|ZGC Major Cycles|\"}))",
          "format": "time_series",
          "instant": false,
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "{{gc}}",
          "metric": "",
          "refId": "A",
          "step": 14400
        }
      ],
      "title": "Collector",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "Size of the Young Gen. This is available for PS Eden Space|G1 Eden Space|PS Survivor Space|G1 Survivor Space|Par Eden Space|Par Survivor Space pools",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 1,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 6,
        "y": 1
      },
      "id": 29,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "sum(jvm_memory_pool_committed_bytes{pod=\"$pod\",container=\"$container\",pool=~\"PS Eden Space|G1 Eden Space|PS Survivor Space|G1 Survivor Space|Par Eden Space|Par Survivor Space|young|survivor|Eden Space|Survivor Space|ZGC Young Generation\"} or vector(0))",
          "format": "time_series",
          "hide": false,
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "",
          "range": true,
          "refId": "B",
          "step": 14400
        }
      ],
      "title": "Young H",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "Size of the Old Gen. This is available for PS Old Gen|G1 Old Gen|CMS Old Gen|ZHeap",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 1,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 8,
        "y": 1
      },
      "id": 38,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "sum(jvm_memory_pool_committed_bytes{pod=\"$pod\",container=\"$container\",pool=~\"PS Old Gen|G1 Old Gen|CMS Old Gen|ZHeap|old|Tenured Gen|ZGC Old Generation\"})",
          "format": "time_series",
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "",
          "range": true,
          "refId": "A",
          "step": 14400
        }
      ],
      "title": "Old H",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "Size of the JVM stack (class structures, runtime constant pool, field, method data, code for methods/constructors/interned strings)",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 1,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 10,
        "y": 1
      },
      "id": 45,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "sum(jvm_memory_committed_bytes{pod=\"$pod\",container=\"$container\",area=\"nonheap\"})",
          "format": "time_series",
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "",
          "range": true,
          "refId": "A",
          "step": 14400
        }
      ],
      "title": "Non H",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "Size of the Off Heap (Direct Mem + Mapped Mem) allocated on the RAM directlyDirect mem is when using java.nio.DirectByteBuffer classMapped mem is when using java.nio.MappedByteBuffer class",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 1,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 12,
        "y": 1
      },
      "id": 28,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "sum(jvm_buffer_pool_capacity_bytes{pod=\"$pod\",container=\"$container\"})",
          "format": "time_series",
          "intervalFactor": 2,
          "legendFormat": "",
          "range": true,
          "refId": "A",
          "step": 14400
        }
      ],
      "title": "Off Heap",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "Size of the JVM heap at start-up.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 1,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 14,
        "y": 1
      },
      "id": 8,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "(sum(jvm_memory_pool_init_bytes{pod=\"$pod\",container=\"$container\", pool=~\"PS Eden Space|G1 Eden Space|PS Survivor Space|G1 Survivor Space|Par Eden Space|Par Survivor Space|young|survivor|Eden Space|Survivor Space|ZGC Young Generation\"}) OR vector(0))+sum(jvm_memory_pool_init_bytes{pod=\"$pod\",container=\"$container\", pool=~\"PS Old Gen|G1 Old Gen|CMS Old Gen|ZHeap|old|Tenured Gen|ZGC Old Generation\"})",
          "format": "time_series",
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "",
          "range": true,
          "refId": "A",
          "step": 14400
        }
      ],
      "title": "Xms",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "Size of the JVM heap at target. If memory is needed by the application, the JVM will progressively allocate more memory to the heap until reaching Xmx.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 1,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 16,
        "y": 1
      },
      "id": 51,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "(sum(jvm_memory_pool_max_bytes{pod=\"$pod\",container=\"$container\", pool=~\"PS Eden Space|G1 Eden Space|PS Survivor Space|G1 Survivor Space|Par Eden Space|Par Survivor Space|young|survivor|Eden Space|Survivor Space\"}) OR vector(0))+sum(jvm_memory_pool_max_bytes{pod=\"$pod\",container=\"$container\", pool=~\"PS Old Gen|G1 Old Gen|CMS Old Gen|ZHeap|old|Tenured Gen|ZGC Old Generation\"})",
          "format": "time_series",
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "",
          "range": true,
          "refId": "A",
          "step": 14400
        }
      ],
      "title": "Xmx",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "Xms Heap/Limit at start-up\n\nMostly set by construction in memlimit-to-xmx.sh",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [
            {
              "options": {
                "": {
                  "text": "x"
                }
              },
              "type": "value"
            },
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgba(50, 172, 45, 0.97)"
              },
              {
                "color": "#ef843c",
                "value": 0.7
              },
              {
                "color": "#890f02",
                "value": 0.91
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 18,
        "y": 1
      },
      "id": 15,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "((sum(jvm_memory_pool_init_bytes{pod=\"$pod\",container=\"$container\", pool=~\"PS Eden Space|G1 Eden Space|PS Survivor Space|G1 Survivor Space|Par Eden Space|Par Survivor Space|young|survivor|Eden Space|Survivor Space|ZGC Young Generation\"} OR vector(0)))+sum(jvm_memory_pool_init_bytes{pod=\"$pod\",container=\"$container\", pool=~\"PS Old Gen|G1 Old Gen|CMS Old Gen|ZHeap|old|Tenured Gen|ZGC Old Generation\"})) / sum(kube_pod_container_resource_limits_memory_bytes{pod=\"$pod\",container=~\"^($container)$\"})",
          "format": "time_series",
          "intervalFactor": 2,
          "legendFormat": "",
          "range": true,
          "refId": "A",
          "step": 14400
        }
      ],
      "title": "Xms %",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "Xmx Heap/Limit at target\n\nMostly set by construction in memlimit-to-xmx.sh",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [
            {
              "options": {
                "": {
                  "text": "x"
                }
              },
              "type": "value"
            },
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgba(50, 172, 45, 0.97)"
              },
              {
                "color": "#ef843c",
                "value": 0.7
              },
              {
                "color": "#890f02",
                "value": 0.91
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 20,
        "y": 1
      },
      "id": 47,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "((sum(jvm_memory_pool_max_bytes{pod=\"$pod\",container=\"$container\", pool=~\"PS Eden Space|G1 Eden Space|PS Survivor Space|G1 Survivor Space|Par Eden Space|Par Survivor Space|young|survivor|Eden Space|Survivor Space\"} OR vector(0)))+sum(jvm_memory_pool_max_bytes{pod=\"$pod\",container=\"$container\", pool=~\"PS Old Gen|G1 Old Gen|CMS Old Gen|ZHeap|old|Tenured Gen|ZGC Old Generation\"})) / sum(kube_pod_container_resource_limits_memory_bytes{pod=\"$pod\",container=~\"^($container)$\"})",
          "format": "time_series",
          "intervalFactor": 2,
          "legendFormat": "",
          "range": true,
          "refId": "A",
          "step": 14400
        }
      ],
      "title": "Xmx %",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "Current memory limit defined for this container",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 1,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 22,
        "y": 1
      },
      "id": 50,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "exemplar": false,
          "expr": "max(kube_pod_container_resource_limits_memory_bytes{pod=~\"$pod\",container=\"$container\"})",
          "format": "time_series",
          "instant": false,
          "intervalFactor": 1,
          "legendFormat": "",
          "range": true,
          "refId": "A",
          "step": 14400
        }
      ],
      "title": "Limit",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "Used Heap/Heap. OutOfMemoryError Exception if crossing 100%.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [
            {
              "options": {
                "": {
                  "text": "x"
                }
              },
              "type": "value"
            },
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#37872D"
              },
              {
                "color": "#FA6400",
                "value": 0.9
              },
              {
                "color": "rgba(245, 54, 54, 0.9)",
                "value": 1
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 0,
        "y": 4
      },
      "id": 19,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "((sum(jvm_memory_pool_used_bytes{pod=\"$pod\",container=\"$container\", pool=~\"PS Eden Space|G1 Eden Space|PS Survivor Space|G1 Survivor Space|Par Eden Space|Par Survivor Space|young|survivor|Eden Space|Survivor Space|ZGC Young Generation\"}) OR vector(0))+sum(jvm_memory_pool_used_bytes{pod=\"$pod\",container=\"$container\", pool=~\"PS Old Gen|G1 Old Gen|CMS Old Gen|ZHeap|old|Tenured Gen|ZGC Old Generation\"})) / ((sum(jvm_memory_pool_max_bytes{pod=\"$pod\",container=\"$container\", pool=~\"PS Eden Space|G1 Eden Space|PS Survivor Space|G1 Survivor Space|Par Eden Space|Par Survivor Space|young|survivor|Eden Space|Survivor Space|ZGC Young Generation\"}) OR vector(0))+sum(jvm_memory_pool_max_bytes{pod=\"$pod\",container=\"$container\", pool=~\"PS Old Gen|G1 Old Gen|CMS Old Gen|ZHeap|old|Tenured Gen|ZGC Old Generation\"}))",
          "format": "time_series",
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "",
          "range": true,
          "refId": "B",
          "step": 14400
        }
      ],
      "title": "Max Mem Usage %",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "elasticsearch",
        "uid": "${DS_DS_ELASTIC_LOGS}"
      },
      "description": "#Number of times this JVM was java.lang.OutOfMemoryError",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [
            {
              "options": {
                "": {
                  "index": 0,
                  "text": "x"
                }
              },
              "type": "value"
            },
            {
              "options": {
                "match": "null",
                "result": {
                  "index": 1,
                  "text": "0"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#37872D"
              },
              {
                "color": "#C4162A",
                "value": 1
              },
              {
                "color": "rgba(245, 54, 54, 0.9)"
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 4,
        "y": 4
      },
      "id": 56,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "sum"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "bucketAggs": [
            {
              "field": "@timestamp",
              "id": "2",
              "settings": {
                "interval": "auto",
                "min_doc_count": 0,
                "trimEdges": 0
              },
              "type": "date_histogram"
            }
          ],
          "datasource": {
            "type": "elasticsearch",
            "uid": "${DS_DS_ELASTIC_LOGS}"
          },
          "metrics": [
            {
              "field": "starttime",
              "id": "1",
              "meta": {},
              "settings": {},
              "type": "count"
            }
          ],
          "query": "\"java.lang.OutOfMemoryError:\" AND (\"Java heap space\" OR \"GC Overhead limit exceeded\" OR \"Requested array size exceeds VM limit\" OR \"Metaspace\" OR \"Compressed class space\" OR \"stack_trace_with_native_method\") && application:\"$container\" && host:\"$pod\"",
          "refId": "A",
          "timeField": "@timestamp"
        }
      ],
      "title": "OOM",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "elasticsearch",
        "uid": "${DS_DS_ELASTIC_GC}"
      },
      "description": "Number of ZGC Allocation Stall \ne.g. \n[2022-11-25T00:18:05.712+0100][info ][gc ] GC(127) Garbage Collection (Allocation Stall) 948M(66%)->1034M(72%)",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [
            {
              "options": {
                "": {
                  "index": 0,
                  "text": "x"
                }
              },
              "type": "value"
            },
            {
              "options": {
                "match": "null",
                "result": {
                  "index": 1,
                  "text": "0"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#37872D"
              },
              {
                "color": "#FA6400",
                "value": 20
              },
              {
                "color": "rgba(245, 54, 54, 0.9)",
                "value": 100
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 6,
        "y": 4
      },
      "id": 57,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "sum"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "alias": "",
          "bucketAggs": [
            {
              "field": "@logtimestamp",
              "id": "2",
              "settings": {
                "interval": "auto",
                "min_doc_count": 0,
                "trimEdges": 0
              },
              "type": "date_histogram"
            }
          ],
          "datasource": {
            "type": "elasticsearch",
            "uid": "${DS_DS_ELASTIC_GC}"
          },
          "metrics": [
            {
              "field": "starttime",
              "id": "1",
              "meta": {},
              "settings": {},
              "type": "count"
            }
          ],
          "query": "\"Garbage Collection (Allocation Stall)\" AND NOT \"start\" AND host:\"$pod\"",
          "refId": "A",
          "timeField": "@timestamp"
        }
      ],
      "title": "Stall",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "Used (after GC) Old Heap / Old Heap, should not exceed 70% otherwise degradation of java performances because too many or too long GCs (CPU intensive).",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#37872D"
              },
              {
                "color": "#FA6400",
                "value": 0.7
              },
              {
                "color": "rgba(245, 54, 54, 0.9)",
                "value": 0.9
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 8,
        "y": 4
      },
      "id": 30,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "exemplar": true,
          "expr": "(min(jvm_memory_used_after_gc_bytes{pod=\"$pod\",container=\"$container\",key=~\"PS Old Gen|G1 Old Gen|CMS Old Gen|old|Tenured Gen|ZGC Old Generation\"})/max(jvm_memory_pool_max_bytes{pod=\"$pod\",container=\"$container\",pool=~\"PS Old Gen|G1 Old Gen|CMS Old Gen|old|Tenured Gen|ZGC Old Generation\"})) OR (max(min_over_time(jvm_memory_pool_used_bytes{pod=\"$pod\",container=\"$container\",pool=~\"PS Old Gen|G1 Old Gen|CMS Old Gen|ZHeap|old|Tenured Gen|ZGC Old Generation\"}[1h]))/max(jvm_memory_pool_max_bytes{pod=\"$pod\",container=\"$container\",pool=~\"PS Old Gen|G1 Old Gen|CMS Old Gen|ZHeap|old|Tenured Gen|ZGC Old Generation\"}))",
          "format": "time_series",
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "",
          "range": true,
          "refId": "A",
          "step": 14400
        }
      ],
      "title": "Old G %",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "Avg GC Throughput is the percentage of time during which the java process was stopped (time for Full and minor GCs) should be < 5% (> 95% of the time for the application).if GC Throughput > 20% too much time is spent in GC which is killing the application. Does not mean anything for ZGC because the collector by design is low latency.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#37872D"
              },
              {
                "color": "#FA6400",
                "value": 0.05
              },
              {
                "color": "rgba(245, 54, 54, 0.9)",
                "value": 0.2
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 10,
        "y": 4
      },
      "id": 46,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "exemplar": true,
          "expr": "(max(sum without(gc)(rate(jvm_gc_collection_seconds_sum{pod=~\"$pod\",container=\"$container\",gc!~\"ZGC|ZGC Cycles|ZGC Pauses|ZGC Minor Cycles|ZGC Major Cycles\"}[$interval]))) OR max(sum without(gc)(rate(jvm_gc_collection_milliseconds_sum{pod=\"$pod\",container=\"$container\",gc!~\"ZGC|ZGC Cycles|ZGC Pauses|ZGC Minor Cycles|ZGC Major Cycles\"}[$interval])/1000))) OR (max(sum without(gc)(rate(jvm_gc_collection_seconds_sum{pod=~\"$pod\",gc!~\"ZGC|ZGC Cycles|ZGC Pauses|ZGC Minor Cycles|ZGC Major Cycles\"}[$interval]))) OR max(sum without(gc)(rate(jvm_gc_collection_milliseconds_sum{pod=\"$pod\",container=\"$container\",gc!~\"ZGC|ZGC Cycles|ZGC Pauses|ZGC Minor Cycles|ZGC Major Cycles\"}[$interval])/1000)))",
          "format": "time_series",
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "",
          "range": true,
          "refId": "A",
          "step": 14400
        }
      ],
      "title": "GC Thr",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "container memory Usage/Limit. OOMKilled is thrown by the container orchestrator if crossing 100%.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [
            {
              "options": {
                "": {
                  "text": "x"
                }
              },
              "type": "value"
            },
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#37872D"
              },
              {
                "color": "#FA6400",
                "value": 0.9
              },
              {
                "color": "rgba(245, 54, 54, 0.9)",
                "value": 0.98
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 12,
        "y": 4
      },
      "id": 48,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "max(container_memory_working_set_bytes{pod=~\"$pod\",container=~\"^($container)$\"})/ sum(kube_pod_container_resource_limits_memory_bytes{pod=\"$pod\",container=~\"^($container)$\"}) OR (max(container_memory_working_set_bytes{pod=~\"$pod\"})/ sum(kube_pod_container_resource_limits_memory_bytes{pod=\"$pod\"}))",
          "format": "time_series",
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "",
          "range": true,
          "refId": "A",
          "step": 14400
        }
      ],
      "title": "OOMKilled %",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "#Number of times this pod/container was restarted due to an OOMKilled.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [
            {
              "options": {
                "": {
                  "index": 0,
                  "text": "x"
                }
              },
              "type": "value"
            },
            {
              "options": {
                "match": "null",
                "result": {
                  "index": 1,
                  "text": "0"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#37872D"
              },
              {
                "color": "#C4162A",
                "value": 1
              },
              {
                "color": "rgba(245, 54, 54, 0.9)"
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 15,
        "y": 4
      },
      "id": 54,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "increase (kube_pod_container_status_restarts_total{pod=\"$pod\",container=\"$container\"}[$__range])*on (pod, container) group_left(reason) kube_pod_container_status_last_terminated_reason{pod=\"$pod\",container=\"$container\",reason=\"OOMKilled\"}",
          "format": "time_series",
          "hide": false,
          "instant": false,
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "",
          "refId": "A",
          "step": 14400
        }
      ],
      "title": "OOMKilled",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "Max CPU Throttling on the period. Should be less than 90% otherwise CPU Limit may be too small.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "index": 0,
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgba(50, 172, 45, 0.97)"
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 0.9
              },
              {
                "color": "rgba(245, 54, 54, 0.9)",
                "value": 0.99
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 18,
        "y": 4
      },
      "id": 11,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "value",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "sum(container_cpu_cfs_throttled_periods_total{pod=~\"$pod\",container=~\"$container\"} / container_cpu_cfs_periods_total{pod=~\"$pod\",container=~\"$container\"} )",
          "format": "time_series",
          "intervalFactor": 2,
          "legendFormat": "",
          "range": true,
          "refId": "A",
          "step": 14400
        }
      ],
      "title": "Throt.",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "Current number of JVM threads",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [
            {
              "options": {
                "": {
                  "text": "x"
                }
              },
              "type": "value"
            },
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgba(50, 172, 45, 0.97)"
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 5
              },
              {
                "color": "rgba(245, 54, 54, 0.9)",
                "value": 20
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 20,
        "y": 4
      },
      "id": 58,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "sum(jvm_threads_current{pod=\"$pod\",container=\"$container\"}) OR (sum(jvm_threads_current{pod=\"$pod\"}))",
          "format": "time_series",
          "intervalFactor": 2,
          "legendFormat": "",
          "range": true,
          "refId": "A",
          "step": 14400
        }
      ],
      "title": "Threads",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "Number of Open handles (disk files, named pipes, network sockets and devices) by processes in the container. Same as lsof command.",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [
            {
              "options": {
                "": {
                  "text": "x"
                }
              },
              "type": "value"
            },
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 22,
        "y": 4
      },
      "id": 14,
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "auto",
        "wideLayout": true
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "sum(process_open_fds{pod=\"$pod\",container=\"$container\"})",
          "format": "time_series",
          "intervalFactor": 2,
          "legendFormat": "",
          "range": true,
          "refId": "A",
          "step": 14400
        }
      ],
      "title": "Files",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "Shows OCP limit defined in the container template or site. OCP usage reported by kuberenetes. Xmx Heap close to the Xmx defined as 70% of limitUsed Heap is the max jvm heap usage after GCUsed Heap+NonHeap covering as well the Stack : class structures, runtime constant pool, field, method data, code for methods/constructors/interned stringsYou should have OCP Limit > OCP usage > Xmx Heap+NonHeap > Used HeapAnd No Swap",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Old gen at 70% usage"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#890f02",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "OCP Limit"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#9ac48a",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 7
      },
      "id": 40,
      "options": {
        "legend": {
          "calcs": [
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "sortBy": "Max",
          "sortDesc": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "((sum(jvm_memory_pool_max_bytes{pod=\"$pod\",container=\"$container\", pool=~\"PS Eden Space|G1 Eden Space|PS Survivor Space|G1 Survivor Space|Par Eden Space|Par Survivor Space|young|survivor|Eden Space|Survivor Space\"}) OR vector(0))+sum(jvm_memory_pool_max_bytes{pod=\"$pod\",container=\"$container\", pool=~\"PS Old Gen|G1 Old Gen|CMS Old Gen|ZHeap|old|Tenured Gen|ZGC Old Generation\"}))",
          "format": "time_series",
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "SLA Xmx Heap",
          "range": true,
          "refId": "F"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "((sum(jvm_memory_pool_committed_bytes{pod=\"$pod\",container=\"$container\", pool=~\"PS Eden Space|G1 Eden Space|PS Survivor Space|G1 Survivor Space|Par Eden Space|Par Survivor Space|young|survivor|Eden Space|Survivor Space|ZGC Young Generation\"}) OR vector(0))+sum(jvm_memory_pool_committed_bytes{pod=\"$pod\",container=\"$container\", pool=~\"PS Old Gen|G1 Old Gen|CMS Old Gen|ZHeap|old|Tenured Gen|ZGC Old Generation\"}))",
          "format": "time_series",
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "Committed Heap",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "((sum(jvm_memory_pool_used_bytes{pod=\"$pod\",container=\"$container\", pool=~\"PS Eden Space|G1 Eden Space|PS Survivor Space|G1 Survivor Space|Par Eden Space|Par Survivor Space|young|survivor|Eden Space|Survivor Space|ZGC Young Generation\"}) OR vector(0))+sum(jvm_memory_pool_used_bytes{pod=\"$pod\",container=\"$container\", pool=~\"PS Old Gen|G1 Old Gen|CMS Old Gen|ZHeap|old|Tenured Gen|ZGC Old Generation\"}))",
          "format": "time_series",
          "hide": false,
          "intervalFactor": 2,
          "legendFormat": "Heap Used",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "sum(jvm_memory_pool_used_bytes{pod=\"$pod\",container=\"$container\",pool=~\"PS Old Gen|G1 Old Gen|CMS Old Gen|ZHeap|old|Tenured Gen|ZGC Old Generation\"})",
          "format": "time_series",
          "hide": false,
          "intervalFactor": 1,
          "legendFormat": "Old Gen Used",
          "range": true,
          "refId": "Q"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "exemplar": true,
          "expr": "(min(jvm_memory_used_after_gc_bytes{pod=\"$pod\",container=\"$container\",key=~\"PS Old Gen|G1 Old Gen|CMS Old Gen|ZHeap|old|Tenured Gen|ZGC Old Generation\"})) OR (max(min_over_time(jvm_memory_pool_used_bytes{pod=\"$pod\",container=\"$container\",pool=~\"PS Old Gen|G1 Old Gen|CMS Old Gen|ZHeap|old|Tenured Gen|ZGC Old Generation\"}[1h])))",
          "format": "time_series",
          "hide": false,
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "Old Gen Used after GC",
          "range": true,
          "refId": "L"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "exemplar": true,
          "expr": "max(vpr_static_jvm_memory_bytes{pod=~\"$podGroup.*\",container=\"$container\"})",
          "format": "time_series",
          "hide": true,
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "VPR static mem",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "exemplar": true,
          "expr": "max(vpr_old_max_after_full_gc_memory_bytes{pod=~\"$podGroup.*\",container=\"$container\"})",
          "format": "time_series",
          "hide": true,
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "VPR Old after full GC",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "exemplar": true,
          "expr": "max(vpr_young_max_after_gc_memory_bytes{pod=~\"$podGroup.*\",container=\"$container\"})",
          "format": "time_series",
          "hide": true,
          "interval": "",
          "intervalFactor": 2,
          "legendFormat": "VPR Young after GC",
          "range": true,
          "refId": "E"
        }
      ],
      "title": "JVM View",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_DS_PROMETHEUS}"
      },
      "description": "Shows K8S limit defined in the container template or site. K8S usage reported by kuberenetes. Xmx Heap close to the Xmx defined as 70% of limitUsed Heap is the max jvm heap usage after GCUsed Heap+NonHeap covering as well the Stack : class structures, runtime constant pool, field, method data, code for methods/constructors/interned strings \nYou should have K8S Limit > K8S usage > Xmx Heap+NonHeap > Used HeapAnd No Swap",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "links": [],
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Old gen at 70% usage"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#890f02",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "OCP Limit"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "#9ac48a",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 7
      },
      "id": 49,
      "options": {
        "legend": {
          "calcs": [
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "sortBy": "Max",
          "sortDesc": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.3",
      "targets": [
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "max(kube_pod_container_resource_limits_memory_bytes{pod=~\"$pod\",container=~\"^($container)$\"})",
          "format": "time_series",
          "intervalFactor": 2,
          "legendFormat": "SLA K8S Limit",
          "range": true,
          "refId": "G"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "max(container_memory_working_set_bytes{pod=~\"$pod\",container=~\"^($container)$\"})",
          "format": "time_series",
          "hide": false,
          "intervalFactor": 2,
          "legendFormat": "K8S Usage",
          "range": true,
          "refId": "D"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "max(container_memory_working_set_bytes{pod=~\"$pod\",container=~\"^($container)$\"}) - (((sum(jvm_memory_pool_committed_bytes{pod=\"$pod\",container=\"$container\", pool=~\"PS Eden Space|G1 Eden Space|PS Survivor Space|G1 Survivor Space|Par Eden Space|Par Survivor Space|young|survivor|Eden Space|Survivor Space|ZGC Young Generation\"}) OR vector(0))+sum(jvm_memory_pool_committed_bytes{pod=\"$pod\",container=\"$container\", pool=~\"PS Old Gen|G1 Old Gen|CMS Old Gen|ZHeap|old|Tenured Gen|ZGC Old Generation\"})))",
          "format": "time_series",
          "hide": false,
          "intervalFactor": 2,
          "legendFormat": "Delta K8S - JVM",
          "range": true,
          "refId": "A"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "(max(kube_pod_container_resource_requests_memory_bytes{pod=~\"$pod\",container=~\"^($container)$\"}))",
          "format": "time_series",
          "intervalFactor": 1,
          "legendFormat": "K8S Req",
          "range": true,
          "refId": "C"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "max(vpr_recommendation_requests_memory_bytes{pod=~\"$podGroup.*\",container=\"$container\"})",
          "format": "time_series",
          "hide": true,
          "intervalFactor": 1,
          "legendFormat": "VPR New Req",
          "range": true,
          "refId": "B"
        },
        {
          "datasource": {
            "type": "prometheus",
            "uid": "${DS_DS_PROMETHEUS}"
          },
          "editorMode": "code",
          "expr": "max(vpr_recommendation_limits_memory_bytes{pod=~\"$podGroup.*\",container=\"$container\"})",
          "format": "time_series",
          "hide": true,
          "intervalFactor": 1,
          "legendFormat": "VPR New Limit",
          "range": true,
          "refId": "E"
        }
      ],
      "title": "K8S View",
      "type": "timeseries"
    }
  ],
  "refresh": "",
  "schemaVersion": 41,
  "tags": [
    "Pod"
  ],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_DS_PROMETHEUS}"
        },
        "definition": "label_values(jvm_memory_pool_used_bytes,pod)",
        "includeAll": false,
        "name": "pod",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(jvm_memory_pool_used_bytes,pod)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 2,
        "regex": "",
        "sort": 1,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_DS_PROMETHEUS}"
        },
        "definition": "label_values(jvm_memory_pool_used_bytes{pod=\"$pod\"},pod)",
        "hide": 2,
        "includeAll": false,
        "name": "podGroup",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(jvm_memory_pool_used_bytes{pod=\"$pod\"},pod)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 2,
        "regex": "(.*)-(\\w{8,10}-\\w{5}|\\d{1,3})",
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "prometheus",
          "uid": "${DS_DS_PROMETHEUS}"
        },
        "definition": "label_values(jvm_memory_pool_used_bytes{pod=~\"$container|$pod\"},container)",
        "includeAll": true,
        "name": "container",
        "options": [],
        "query": {
          "qryType": 1,
          "query": "label_values(jvm_memory_pool_used_bytes{pod=~\"$container|$pod\"},container)",
          "refId": "PrometheusVariableQueryEditor-VariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "sort": 1,
        "type": "query"
      },
      {
        "auto": false,
        "auto_count": 30,
        "auto_min": "10s",
        "current": {
          "text": "2m",
          "value": "2m"
        },
        "hide": 2,
        "name": "interval",
        "options": [
          {
            "selected": true,
            "text": "2m",
            "value": "2m"
          }
        ],
        "query": "2m",
        "refresh": 2,
        "type": "interval"
      }
    ]
  },
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Pods Java",
  "uid": "89240341-7c18-43c6-82d2-a17c001283f0",
  "version": 2,
  "weekStart": ""
}